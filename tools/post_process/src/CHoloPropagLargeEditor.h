/**
 */

#ifndef CHOLOPROPAGLARGEEDITOR_H
#define CHOLOPROPAGLARGEEDITOR_H

#include <QWidget>
#include <QString>
#include <QProcess>


class QPushButton;
class QLabel;
class QGroupBox;
class QSpinBox;
class QDoubleSpinBox;
class QLineEdit;
class QCheckBox;
class QTextEdit;
class CPathPicker;

/**
 */
class CHoloPropagLargeEditor : public QWidget
{
    Q_OBJECT

  public:
    /**
     * Default constructor
     */
    explicit CHoloPropagLargeEditor(const QString & config_file, QWidget *parent = 0);

    /**
     * Set the path to DFtoHologram binary
     */
    void setHoloPropagLargePath(const QString & path);

    /**
     */
    void setHoloPropagLargeWorkingDir(const QString & dir);

  signals:
    void error(QString error);
    void utilityFinished(void);

  private slots:
    /**
     * A method to run the utility associated with the given config file
     */
    bool run(void);

    /**
     */
    void handleStdoutRead(void);

    /**
     */
    void handleProcessError(QProcess::ProcessError err);

    /**
     */
    void handleProcessFinished(int exitCode, QProcess::ExitStatus exitStatus);

    /**
     * A method to load settings from a given file
     */
    bool reload(void);

    /**
     * A method to save the settings
     */
    bool save(void);

  private:
    QGroupBox *createSystemInfo(const QString & config_file = QString());
    QGroupBox *createGroupEntries(void);
    QGroupBox *createGroupImageContains(void);
    QGroupBox *createGroupFrame(void);
    QGroupBox *createGroupOperations(void);
    QLayout *createButtons(void);

  private:
    QProcess m_HoloPropagLarge_proc;      /// a process of DFtoHologram utility
    QLabel *m_caption;                    /// editors caption

    CPathPicker *m_cfg_file;              /// the name and location of config that is being edited
    CPathPicker *m_binary_file;           /// a path to utility that uses this config
    CPathPicker *m_working_dir;           /// a working directory of the DFtoHologram utility
    QCheckBox *m_show_output;             /// whether to show the output image generated by utility

    QPushButton *m_pb_run;                /// run the corresponding utility
    QPushButton *m_pb_reload;             /// load config file
    QPushButton *m_pb_save;               /// save config file

    QTextEdit *m_HoloPropagLarge_output;  /// the stdout and stderr of DFtoHologram

    /* widgets to alter config entries */
    QDoubleSpinBox *m_entry_Lambda;
    QDoubleSpinBox *m_entry_Pitch;
    QCheckBox *m_entry_ForceSettings;
    QCheckBox *m_entry_RandomizePhase;
    QCheckBox *m_entry_ImageContainsIntensity;
    QCheckBox *m_entry_ImageContainsAmplitude;
    QCheckBox *m_entry_ImageContainsPhase;
    QLineEdit *m_entry_Input;
    QLineEdit *m_entry_Target;
    QDoubleSpinBox *m_entry_ImageIntensityMaximum;
    QDoubleSpinBox *m_entry_ImageIntensityMinimum;
    QCheckBox *m_entry_Frame;
    QSpinBox *m_entry_FrameX;
    QSpinBox *m_entry_FrameY;
    QCheckBox *m_entry_FrameRemove;
    QTextEdit *m_entry_Operations;
};

#endif
